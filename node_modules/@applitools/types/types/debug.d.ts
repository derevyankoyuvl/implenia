export declare type CustomLogHandler = {
    log(message: any): void;
    warn?(message: any): void;
    error?(message: any): void;
    fatal?(message: any): void;
    open?(): void;
    close?(): void;
};
export declare type FileLogHandler = {
    type: 'file';
    filename?: string;
    append?: boolean;
};
export declare type ConsoleLogHandler = {
    type: 'console';
};
export declare type LogHandler = CustomLogHandler | FileLogHandler | ConsoleLogHandler;
export declare type Logger = {
    isLogger: true;
    debug(...messages: any[]): void;
    log(...messages: any[]): void;
    warn(...messages: any[]): void;
    error(...messages: any[]): void;
    fatal(...messages: any[]): void;
    verbose(...messages: any[]): void;
    console: {
        debug(...messages: any[]): void;
        log(...messages: any[]): void;
        warn(...messages: any[]): void;
        error(...messages: any[]): void;
        fatal(...messages: any[]): void;
        verbose(...messages: any[]): void;
    };
    tag(name: string, value: any): void;
    extend(...options: any): Logger;
    open(): void;
    close(): void;
};
