{
  "_from": "@applitools/eyes-playwright@^1.11.3",
  "_id": "@applitools/eyes-playwright@1.12.7",
  "_inBundle": false,
  "_integrity": "sha512-klhbb2oaxbfuVNRZppBoF5/UxOqQzKgy0GTtOS0l7F5anihyk0d663Gbqt8W9VqGraYUbTfDHgTUTjnoAjM4Kw==",
  "_location": "/@applitools/eyes-playwright",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@applitools/eyes-playwright@^1.11.3",
    "name": "@applitools/eyes-playwright",
    "escapedName": "@applitools%2feyes-playwright",
    "scope": "@applitools",
    "rawSpec": "^1.11.3",
    "saveSpec": null,
    "fetchSpec": "^1.11.3"
  },
  "_requiredBy": [
    "/codeceptjs-applitoolshelper"
  ],
  "_resolved": "https://registry.npmjs.org/@applitools/eyes-playwright/-/eyes-playwright-1.12.7.tgz",
  "_shasum": "900dc80528c6a7854d98951dfb9c0228743ac6d4",
  "_spec": "@applitools/eyes-playwright@^1.11.3",
  "_where": "/Users/yuriyderevyanko/impleniaProject/node_modules/codeceptjs-applitoolshelper",
  "aliases": [
    "playwright"
  ],
  "author": {
    "name": "Applitools Team",
    "email": "team@applitools.com"
  },
  "bugs": {
    "url": "https://github.com/applitools/eyes.sdk.javascript1/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@applitools/core": "1.1.5",
    "@applitools/eyes-api": "1.8.5",
    "@applitools/spec-driver-playwright": "1.3.3"
  },
  "deprecated": false,
  "description": "Applitools Eyes SDK for Playwright",
  "devDependencies": {
    "@applitools/api-extractor": "1.2.11",
    "@applitools/bongo": "^2.2.0",
    "@applitools/scripts": "1.2.0",
    "@applitools/sdk-coverage-tests": "2.3.20",
    "@applitools/sdk-shared": "0.9.15",
    "@applitools/test-utils": "1.5.2",
    "@types/mocha": "^9.1.1",
    "@types/node": "12",
    "@typescript-eslint/eslint-plugin": "^5.27.0",
    "@typescript-eslint/parser": "^5.27.0",
    "eslint": "^8.16.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-mocha-no-only": "^1.1.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.0.0",
    "husky": "^4.3.7",
    "mocha": "^10.0.0",
    "playwright": "^1.22.2",
    "prettier": "^2.6.2",
    "spec-xunit-file": "0.0.1-3",
    "ts-node": "^10.2.1",
    "ttypescript": "^1.5.12",
    "typescript": "^4.7.2"
  },
  "engines": {
    "node": ">=12.13.0"
  },
  "files": [
    "dist",
    "types"
  ],
  "homepage": "https://applitools.com",
  "husky": {
    "hooks": {
      "pre-push": "yarn bongo lint"
    }
  },
  "keywords": [
    "eyes-playwright",
    "applitools",
    "eyes",
    "test automation",
    "visual regression",
    "automation",
    "testing",
    "tests",
    "playwright"
  ],
  "license": "SEE LICENSE IN LICENSE",
  "main": "./dist/index.js",
  "name": "@applitools/eyes-playwright",
  "peerDependencies": {
    "playwright": ">=1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/applitools/eyes.sdk.javascript1.git",
    "directory": "js/packages/eyes-playwright"
  },
  "scripts": {
    "build": "ttsc",
    "deps": "bongo deps",
    "generate:tests": "coverage-tests generate https://raw.githubusercontent.com/applitools/sdk.coverage.tests/universal-sdk/js/config.js --name 'eyes-playwright'",
    "gh:publish": "gh workflow run publish-playwright.yml --ref $(git rev-parse --abbrev-ref HEAD)",
    "gh:test": "gh workflow run test.yml --ref $(git rev-parse --abbrev-ref HEAD) -f packages='playwright' -f links='types test-utils sdk-shared eyes-sdk-core visual-grid-client eyes-api spec-driver-playwright utils driver snippets screenshoter'",
    "lint": "eslint '**/*.ts'",
    "postversion": "bongo postversion",
    "preversion": "bongo preversion --verifyPendingChanges && yarn build",
    "report": "coverage-tests report https://raw.githubusercontent.com/applitools/sdk.coverage.tests/master/js/config.js --name 'eyes-playwright'",
    "test": "yarn test:coverage",
    "test:coverage": "yarn generate:tests && APPLITOOLS_BATCH_NAME='JS Coverage Tests: eyes-playwright' APPLITOOLS_BATCH_ID=$(uuidgen) XUNIT_FILE=coverage-test-report.xml mocha --config .mocharc.cvg.js",
    "test:sanity": "echo 'create sanity suite'",
    "upgrade:framework": "if [ ! -z $APPLITOOLS_PLAYWRIGHT_VERSION ]; then packagejson=`cat package.json`; yarn upgrade --no-lockfile playwright@$APPLITOOLS_PLAYWRIGHT_VERSION; echo \"$packagejson\" > package.json; fi",
    "version": "bongo version --withPendingChanges"
  },
  "types": "./types/index.d.ts",
  "version": "1.12.7"
}
