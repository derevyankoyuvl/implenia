import { type Logger } from '@applitools/logger';
import { type UFGRequests, type UFGRequestsConfig } from './server/requests';
import { type CreateRenderTarget } from './create-render-target';
import { type BookRenderer } from './book-renderer';
import { type Render } from './render';
export interface UFGClient {
    createRenderTarget: CreateRenderTarget;
    bookRenderer: BookRenderer;
    render: Render;
    getChromeEmulationDevices: UFGRequests['getChromeEmulationDevices'];
    getAndroidDevices: UFGRequests['getAndroidDevices'];
    getIOSDevices: UFGRequests['getIOSDevices'];
    getCachedResourceUrls(): string[];
}
export declare const defaultResourceCache: Map<string, any>;
export declare function makeUFGClient({ config, concurrency, cache, logger, }: {
    config: UFGRequestsConfig;
    concurrency?: number;
    cache?: Map<string, any>;
    logger?: Logger;
}): UFGClient;
