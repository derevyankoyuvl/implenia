import type { SpecDriver } from '@applitools/types';
import type { Core as BaseCore } from '@applitools/types/base';
import type { Core } from '@applitools/types/classic';
import { type Logger } from '@applitools/logger';
declare type Options<TDriver, TContext, TElement, TSelector> = {
    spec: SpecDriver<TDriver, TContext, TElement, TSelector>;
    core?: BaseCore;
    agentId?: string;
    cwd?: string;
    logger?: Logger;
};
export declare function makeCore<TDriver, TContext, TElement, TSelector>({ spec, core, agentId, cwd, logger, }: Options<TDriver, TContext, TElement, TSelector>): Core<TDriver, TElement, TSelector>;
export {};
