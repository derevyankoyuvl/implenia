import type { Selector, Renderer } from '@applitools/types';
import type { Screenshot, ScreenshotSettings as ClassicScreenshotSettings } from '@applitools/types/classic';
import type { AndroidVHS, IOSVHS } from '@applitools/types/ufg';
import { type Logger } from '@applitools/logger';
import { type ReqBrokerConfig } from './req-broker';
export declare type ScreenshotSettings = ReqBrokerConfig & ClassicScreenshotSettings<never, never> & {
    name?: string;
    selectorsToFindRegionsFor?: Selector[];
};
export declare type SnapshotSettings = ReqBrokerConfig & {
    name?: string;
    renderers: Renderer[];
    resourceSeparation?: boolean;
    waitBeforeCapture?: number;
};
export declare function takeScreenshot({ url, settings, logger, }: {
    url: string;
    settings: ScreenshotSettings;
    logger?: Logger;
}): Promise<Screenshot>;
export declare function takeSnapshots({ url, settings, logger, }: {
    url: string;
    settings: SnapshotSettings;
    logger?: Logger;
}): Promise<IOSVHS[] | AndroidVHS[]>;
